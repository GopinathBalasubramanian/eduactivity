{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunks\nexport const fetchProviders = createAsyncThunk('providers/fetchProviders', async (params, {\n  rejectWithValue\n}) => {\n  try {\n    // Use custom endpoint if provided, default to /api/providers/\n    const endpoint = (params === null || params === void 0 ? void 0 : params.endpoint) || '/api/providers/';\n    const {\n      endpoint: _endpoint,\n      ...queryParams\n    } = params || {};\n    const response = await axios.get(endpoint, {\n      params: queryParams\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Failed to fetch providers');\n  }\n});\nexport const fetchProviderDetail = createAsyncThunk('providers/fetchProviderDetail', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`/api/providers/${id}/`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Failed to fetch provider');\n  }\n});\nexport const createProvider = createAsyncThunk('providers/createProvider', async (providerData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('/api/providers/', providerData);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Failed to create provider');\n  }\n});\nexport const updateProvider = createAsyncThunk('providers/updateProvider', async ({\n  id,\n  data\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.put(`/api/providers/${id}/`, data);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Failed to update provider');\n  }\n});\n\n// Providers slice\nconst providersSlice = createSlice({\n  name: 'providers',\n  initialState: {\n    providers: [],\n    currentProvider: null,\n    loading: false,\n    error: null,\n    pagination: {\n      count: 0,\n      next: null,\n      previous: null\n    }\n  },\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearCurrentProvider: state => {\n      state.currentProvider = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProviders.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchProviders.fulfilled, (state, action) => {\n      state.loading = false;\n      state.providers = action.payload.results;\n      state.pagination = {\n        count: action.payload.count,\n        next: action.payload.next,\n        previous: action.payload.previous\n      };\n    }).addCase(fetchProviders.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(fetchProviderDetail.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchProviderDetail.fulfilled, (state, action) => {\n      state.loading = false;\n      state.currentProvider = action.payload;\n    }).addCase(fetchProviderDetail.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(createProvider.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createProvider.fulfilled, (state, action) => {\n      state.loading = false;\n      state.providers.push(action.payload);\n    }).addCase(createProvider.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(updateProvider.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateProvider.fulfilled, (state, action) => {\n      var _state$currentProvide;\n      state.loading = false;\n      const index = state.providers.findIndex(p => p.id === action.payload.id);\n      if (index !== -1) {\n        state.providers[index] = action.payload;\n      }\n      if (((_state$currentProvide = state.currentProvider) === null || _state$currentProvide === void 0 ? void 0 : _state$currentProvide.id) === action.payload.id) {\n        state.currentProvider = action.payload;\n      }\n    }).addCase(updateProvider.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  clearCurrentProvider\n} = providersSlice.actions;\nexport default providersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchProviders","params","rejectWithValue","endpoint","_endpoint","queryParams","response","get","data","error","_error$response","fetchProviderDetail","id","_error$response2","createProvider","providerData","post","_error$response3","updateProvider","put","_error$response4","providersSlice","name","initialState","providers","currentProvider","loading","pagination","count","next","previous","reducers","clearError","state","clearCurrentProvider","extraReducers","builder","addCase","pending","fulfilled","action","payload","results","rejected","push","_state$currentProvide","index","findIndex","p","actions","reducer"],"sources":["C:/Users/Rameshvar/Desktop/cline/EduActivityFinder/frontend/src/features/providersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunks\r\nexport const fetchProviders = createAsyncThunk(\r\n  'providers/fetchProviders',\r\n  async (params, { rejectWithValue }) => {\r\n    try {\r\n      // Use custom endpoint if provided, default to /api/providers/\r\n      const endpoint = params?.endpoint || '/api/providers/';\r\n      const { endpoint: _endpoint, ...queryParams } = params || {};\r\n      const response = await axios.get(endpoint, { params: queryParams });\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || 'Failed to fetch providers');\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchProviderDetail = createAsyncThunk(\r\n  'providers/fetchProviderDetail',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/api/providers/${id}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || 'Failed to fetch provider');\r\n    }\r\n  }\r\n);\r\n\r\nexport const createProvider = createAsyncThunk(\r\n  'providers/createProvider',\r\n  async (providerData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/api/providers/', providerData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || 'Failed to create provider');\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateProvider = createAsyncThunk(\r\n  'providers/updateProvider',\r\n  async ({ id, data }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.put(`/api/providers/${id}/`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || 'Failed to update provider');\r\n    }\r\n  }\r\n);\r\n\r\n// Providers slice\r\nconst providersSlice = createSlice({\r\n  name: 'providers',\r\n  initialState: {\r\n    providers: [],\r\n    currentProvider: null,\r\n    loading: false,\r\n    error: null,\r\n    pagination: {\r\n      count: 0,\r\n      next: null,\r\n      previous: null,\r\n    },\r\n  },\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearCurrentProvider: (state) => {\r\n      state.currentProvider = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProviders.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchProviders.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.providers = action.payload.results;\r\n        state.pagination = {\r\n          count: action.payload.count,\r\n          next: action.payload.next,\r\n          previous: action.payload.previous,\r\n        };\r\n      })\r\n      .addCase(fetchProviders.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchProviderDetail.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchProviderDetail.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.currentProvider = action.payload;\r\n      })\r\n      .addCase(fetchProviderDetail.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(createProvider.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(createProvider.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.providers.push(action.payload);\r\n      })\r\n      .addCase(createProvider.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(updateProvider.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateProvider.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const index = state.providers.findIndex(p => p.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state.providers[index] = action.payload;\r\n        }\r\n        if (state.currentProvider?.id === action.payload.id) {\r\n          state.currentProvider = action.payload;\r\n        }\r\n      })\r\n      .addCase(updateProvider.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, clearCurrentProvider } = providersSlice.actions;\r\nexport default providersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}